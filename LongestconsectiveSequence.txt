
#include <iostream>


using namespace std;

void display(int *array, int size) {
	cout << "[";
	for (int i = 0; i < size; i++)
	{
		cout << array[i] << " ";
	}
	cout << "]";
	cout << endl;
}

void longestSequence(const int arr[], int size)
{
	//const int SIZE = 5;
	int currentSeq = 1;
	int maxSeq = 0;
	int temp[size];
	for (int i = 0; i < size - 1; i++)
	{
		if (arr[i] == arr[i - 1])
		{
			continue;
		}
		else if (arr[i - 1] == (arr[i] - 1))
		{
			currentSeq++;
			//temp[i] = currentSeq;
		}
		else
		{
			currentSeq = 1;
			//temp[i] = arr[i];
		}
		if (currentSeq > maxSeq)
		{
			maxSeq = currentSeq;

		}

	}


	cout << "The longestSequence is: " << maxSeq << endl;
	//for (int i = 0; i < SIZE; i++)
	//{
	//	cout << temp[i] << " ";

	//}
	//display(temp, SIZE);
}

// Driver code
int main()
{
	int temp = 0;
	int arr[] = { 4,2,5,3,6,99,199 };
	//int arr[] = { 1, 9, 3, 10, 4, 20, 2 };
	int size = sizeof arr / sizeof arr[0];

	for (int i = 0; i < size; i++)
	{
		for (int j = i + 1; j < size; j++)
		{
			//If there is a smaller element found on right of the array then swap it.
			if (arr[j] < arr[i])
			{
				temp = arr[i];
				arr[i] = arr[j];
				arr[j] = temp;
			}
		}
	}
	display(arr, size);
	longestSequence(arr, size);
	//cout << "Length of the Longest contiguous subsequence "
	//	"is "
	//	<< longestSequence(arr, size);
	return 0;
}
